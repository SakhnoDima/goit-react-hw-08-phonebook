{"version":3,"file":"static/js/79.fecec56d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.styles.jsx","components/Form/Form.jsx","components/Modal/Modal.styles.jsx","components/Modal/Modal.jsx","components/IconButton/IconButton.styles.jsx","components/IconButton/IconButton.jsx","components/Contacts/Contacts.styles.jsx","components/Contact/Contact.styles.jsx","components/Contact/Contact.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","components/styles/App.styles.jsx","components/TotalContacts/TotalContacts.style.jsx","components/TotalContacts/TotalContacts.jsx","Pages/ContactsSection.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.value;\n\nexport const getLoadState = createSelector(\n  [getIsLoading, getError],\n  (isLoading, error) => {\n    if (isLoading && !error) {\n      return true;\n    } else return false;\n  }\n);\n\nexport const getFilterContacts = createSelector(\n  [getContacts, getFilter],\n  (items, value) => {\n    const normalizeFilter = value.toLowerCase();\n    return items.filter(({ name }) => {\n      return name.toLowerCase().includes(normalizeFilter);\n    });\n  }\n);\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const Forma = styled(Form)`\n  margin: 16px auto;\n  display: flex;\n  flex-direction: column;\n  width: ${({ theme }) => theme.spacing(100)};\n  padding: ${({ theme }) => theme.spacing(3)};\n  background-color: var(--dark-background);\n  color: var(--dark-text);\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => theme.spacing(8)};\n  color: var(--light-text);\n  font-size: 20px;\n`;\nexport const Input = styled(Field)`\n  outline: 0;\n  border: 1px solid var(--button-border);\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n  background-color: var(--dark-background);\n  color: var(--light-text);\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.colors.accent};\n  }\n`;\nexport const Button = styled.button`\n  margin: 0 auto;\n  width: 150px;\n  padding: 8px 16px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  border: 1px solid ${({ theme }) => theme.colors.dark};\n  color: var(--light-text);\n  background-color: var(--button-background);\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\nexport const Error = styled.h3`\n  color: red;\n  text-align: center;\n`;\n","import { nanoid } from 'nanoid';\nimport { Formik, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { operations, selectors } from 'redux/contacts/index';\n\nimport { Label, Button, Forma, Input, Error } from './Form.styles';\n\nimport { KEY_LS } from 'components/helpers/themtoggle';\n\nconst schema = object({\n  name: string().required('Name is required!'),\n  number: string()\n    .required('Number is required!')\n    .min(10, 'Too Short!')\n    .max(13, 'Too Long!'),\n});\n\nconst Forms = ({ onSubmit }) => {\n  const loading = useSelector(selectors.getLoadState);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.getContacts);\n  const state = {\n    name: '',\n    number: '',\n  };\n  const idNameForm = nanoid();\n  const idTelForm = nanoid();\n\n  // === сабміт форми ===\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    // ===  перевірка на вже існуюче ім'я ===\n    const includeName = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n    if (includeName) {\n      alert(`${name} Is already in contacts`);\n      return;\n    }\n    // === додавання до списку крнтакту ===\n\n    const updateContacts = {\n      name: name,\n      number: number,\n    };\n    dispatch(operations.addContact(updateContacts)); //!add\n\n    const theme = localStorage.getItem(KEY_LS);\n\n    toast.success(`${name} was added to your contacts`, {\n      autoClose: 2000,\n      theme: `${theme === 'theme-dark' ? 'dark' : 'light'}`,\n    });\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={state}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Forma autoComplete=\"off\">\n          <Label htmlFor={idNameForm}>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id={idNameForm}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n            <ErrorMessage component={Error} name=\"name\" />\n          </Label>\n          <Label htmlFor={idTelForm}>\n            Number\n            <Input\n              id={idTelForm}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            />\n            <ErrorMessage component={Error} name=\"number\" />\n          </Label>\n          <Button disabled={loading} type=\"submit\" title={'Add contact'}>\n            Add contact\n          </Button>\n        </Forma>\n      </Formik>\n    </>\n  );\n};\nexport default Forms;\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--dark-background);\n  color: var(--dark-text);\n  overflow: hidden;\n`;\n\nexport const ModalBody = styled.div`\n  max-height: 660px;\n  overflow: auto;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: ${({ theme }) => theme.spacing(100)};\n  max-width: ${({ theme }) => theme.spacing(200)};\n  width: 100%;\n  padding: ${({ theme }) => theme.spacing(4)};\n  background-color: var(--dark-background);\n  color: var(--dark-text);\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Backdrop, ModalBody } from './Modal.styles';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onCloses, children }) => {\n  useEffect(() => {\n    const handleKeyDown = event => {\n      // закрив по Escspe\n      if (event.code === 'Escape') {\n        onCloses();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onCloses]);\n\n  const handleBackDropClick = event => {\n    // закрив по бекдроп\n    if (event.target === event.currentTarget) {\n      onCloses();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackDropClick}>\n      <ModalBody>{children}</ModalBody>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  border-radius: 50%;\n  color: var(--button-border);\n  svg:hover {\n    fill: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import React from 'react';\nimport { IconContext } from 'react-icons';\nimport PropTypes from 'prop-types';\nimport { Button } from './IconButton.styles';\n\nexport const IconButton = ({ children, onClick }) => {\n  return (\n    <IconContext.Provider value={{ size: '20px', hover: 'red' }}>\n      <Button type=\"button\" onClick={onClick}>\n        {children}\n      </Button>\n    </IconContext.Provider>\n  );\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  background-color: var(--dark-background);\n  color: var(--dark-text);\n`;\n\nexport const List = styled.ul`\n  margin: 16px auto;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: ${({ theme }) => theme.spacing(100)};\n  padding: ${({ theme }) => theme.spacing(3)};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  background-color: var(--dark-background);\n  color: var(--dark-text);\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  list-style: none;\n`;\n\nexport const Error = styled.h2`\n  margin-top: 16px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.error};\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border: 1px solid var(--button-border);\n  padding: ${({ theme }) => theme.spacing(2)};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  margin-bottom: ${({ theme }) => theme.spacing(1)};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  color: var(--light-text);\n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  border: 1px solid var(--button-border);\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import React from 'react';\nimport { selectors, operations } from 'redux/contacts/index';\nimport { RiContactsBook2Fill, RiDeleteBin5Line } from 'react-icons/ri';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Item } from './Contact.styles';\nimport { KEY_LS } from 'components/helpers/themtoggle';\nimport { toast } from 'react-toastify';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectors.getLoadState);\n  const theme = localStorage.getItem(KEY_LS);\n\n  const handleClick = () => {\n    dispatch(operations.deleteContact(id));\n    toast.success(`${name} was deleted from your contacts`, {\n      autoClose: 2000,\n      theme: `${theme === 'theme-dark' ? 'dark' : 'light'}`,\n    });\n  };\n\n  return (\n    <>\n      <Item>\n        <RiContactsBook2Fill />\n        {name} : {number}\n        <Button disabled={loading} onClick={() => handleClick()}>\n          <RiDeleteBin5Line />\n        </Button>\n      </Item>\n    </>\n  );\n};\n\nexport default Contact;\n","import React from 'react';\nimport { selectors } from 'redux/contacts/index';\nimport { useSelector } from 'react-redux';\n\nimport { Div, Error, List } from './Contacts.styles';\nimport Contact from 'components/Contact/Contact';\n\nexport const Contacts = () => {\n  const filteredContacts = useSelector(selectors.getFilterContacts);\n\n  return (\n    <Div>\n      {filteredContacts.length > 0 ? (\n        <List>\n          {filteredContacts.map(contact => {\n            return <Contact key={contact.id} {...contact} />;\n          })}\n        </List>\n      ) : (\n        <Error>Contacts not found</Error>\n      )}\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  text-align: center;\n  margin-top: ${({ theme }) => theme.spacing(4)};\n  color: var(--light-text);\n`;\nexport const Label = styled.label`\n  margin: 0 auto;\n  display: block;\n  width: 200px;\n  margin-top: 4px;\n`;\n\nexport const Input = styled.input`\n  outline: 0;\n  cursor: pointer;\n  border: 1px solid var(--button-border);\n  width: 200px;\n  padding: 10px;\n  margin: 0 auto;\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  background-color: var(--dark-background);\n  color: var(--light-text);\n\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import React from 'react';\nimport { Input, Label, Title } from './Filter.styles';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setContactsFilter } from '../../redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    dispatch(setContactsFilter(event.target.value));\n  };\n  return (\n    <div>\n      <Title>Find contacts by name</Title>\n      <Label>\n        <Input\n          name=\"filter\"\n          type=\"text\"\n          value={useSelector(getFilter)}\n          onChange={handleFilterChange}\n        />\n      </Label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const MainPage = styled.section`\n  margin: 40px auto;\n  padding: 16px;\n  width: ${({ theme }) => theme.spacing(200)};\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  background-color: var(--dark-background);\n  color: var(--dark-text);\n`;\nexport const Button = styled.button`\n  display: block;\n  margin: 80px auto 0;\n  width: 150px;\n  padding: 8px 16px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: ${({ theme }) => theme.spacing(1)};\n  border: 1px solid var(--button-border);\n  color: var(--light-text);\n  background-color: var(--button-background);\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\nexport const Title = styled.h1`\n  color: var(--light-text);\n`;\nexport const Title2 = styled.h1`\n  color: var(--light-text);\n`;\n","import styled from 'styled-components';\nimport { AiOutlineContacts } from 'react-icons/ai';\n\nexport const TotalBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const Total = styled.p`\n  color: var(--light-text);\n`;\n\nexport const TotalIcon = styled(AiOutlineContacts)`\n  fill: var(--button-border);\n  width: 24px;\n  height: 24px;\n`;\n","import React from 'react';\nimport { Total, TotalBox, TotalIcon } from './TotalContacts.style';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst TotalContacts = () => {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <TotalBox>\n      <TotalIcon />\n      <Total>{contacts.length}</Total>\n    </TotalBox>\n  );\n};\n\nexport default TotalContacts;\n","import { AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Forms, { IconButton, Modal } from '../components/Form';\nimport { Contacts } from '../components/Contacts';\nimport Filter from '../components/Filter';\nimport {\n  MainPage,\n  Button,\n  Title,\n  Title2,\n  Header,\n} from '../components/styles/App.styles';\n\nimport TotalContacts from '../components/TotalContacts/TotalContacts';\nimport { operations } from '../redux/contacts/index';\n\nconst ContactsSection = () => {\n  const [showModal, setModalShow] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContacts());\n  }, [dispatch]);\n\n  const modalToggle = () => {\n    setModalShow(prev => !prev);\n  };\n  return (\n    <MainPage>\n      <Header>\n        <TotalContacts />\n      </Header>\n      <Title style={{ textAlign: 'center' }}>Phonebook</Title>\n      <Forms />\n\n      <Button type=\"button\" onClick={modalToggle}>\n        All Cntacts\n      </Button>\n      {showModal && (\n        <Modal onCloses={modalToggle}>\n          <>\n            <IconButton onClick={modalToggle}>\n              <AiOutlineCloseCircle />\n            </IconButton>\n            <Title2 style={{ textAlign: 'center' }}>Contacts</Title2>\n            <Filter />\n            <Contacts />\n          </>\n        </Modal>\n      )}\n      <ToastContainer />\n    </MainPage>\n  );\n};\n\nexport default ContactsSection;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","value","getLoadState","createSelector","isLoading","error","getFilterContacts","normalizeFilter","toLowerCase","_ref","name","includes","Forma","styled","Form","_templateObject","_taggedTemplateLiteral","theme","spacing","_ref2","_ref3","shadows","regular","_ref4","Label","_templateObject2","_ref5","Input","Field","_templateObject3","_ref6","colors","accent","Button","_templateObject4","_ref7","_ref8","dark","_ref9","fontSizes","medium","_ref10","Error","_templateObject5","schema","object","string","required","number","min","max","onSubmit","loading","useSelector","selectors","dispatch","useDispatch","idNameForm","nanoid","idTelForm","_jsx","_Fragment","children","Formik","initialValues","values","resetForm","some","contact","trim","alert","concat","updateContacts","operations","addContact","localStorage","getItem","KEY_LS","toast","autoClose","validationSchema","_jsxs","autoComplete","htmlFor","type","id","pattern","ErrorMessage","component","disabled","title","Backdrop","ModalBody","modalRoot","document","querySelector","Modal","onCloses","useEffect","handleKeyDown","event","code","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","IconButton","IconContext","size","hover","Div","List","Item","RiContactsBook2Fill","deleteContact","RiDeleteBin5Line","Contacts","filteredContacts","length","map","Contact","_objectSpread","Title","onChange","setContactsFilter","Header","MainPage","Title2","TotalBox","Total","TotalIcon","AiOutlineContacts","_useState","useState","_useState2","_slicedToArray","showModal","setModalShow","fetchContacts","modalToggle","prev","TotalContacts","style","textAlign","Forms","AiOutlineCloseCircle","Filter","ToastContainer"],"sourceRoot":""}